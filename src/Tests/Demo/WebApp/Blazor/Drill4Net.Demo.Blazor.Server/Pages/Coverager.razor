@page "/coverager"
@using Drill4Net.Demo.Target

<MudText Typo="Typo.h4">Coverager</MudText>
<div style="height:10px;"></div>

@code {
    private bool _isTest = true;
}

@*Group runers*@
<MudGrid>
    <MudItem xs="12" md="0">
        <MudText Color="Color.Info" Typo="Typo.body2"><i>CoverageTarget @(_isTest ? " (test)" : "")</i></MudText>

        <MudPaper Class="d-flex flex-row py-1">
            <MudButton Variant="@GetButtonVariant()" Color="@GetButtonColor()" OnClick="RunGroup_A">@GetButtonCaption(1)</MudButton>
            <MudText Class="pa-2 mx-2" Typo="Typo.body2">@GetGroupCoverageDesc(MethodGroupType.A)</MudText>
        </MudPaper>
        <MudPaper Class="d-flex flex-row py-1">
            <MudButton Variant="@GetButtonVariant()" Color="@GetButtonColor()" OnClick="RunGroup_B">@GetButtonCaption(2)</MudButton>
            <MudText Class="pa-2 mx-2" Typo="Typo.body2">@GetGroupCoverageDesc(MethodGroupType.B)</MudText>
        </MudPaper>
        <MudPaper Class="d-flex flex-row py-1">
            <MudButton Variant="@GetButtonVariant()" Color="@GetButtonColor()" OnClick="RunGroup_C">@GetButtonCaption(3)</MudButton>
            <MudText Class="pa-2 mx-2" Typo="Typo.body2">@GetGroupCoverageDesc(MethodGroupType.C)</MudText>
        </MudPaper>
        <MudPaper Class="d-flex flex-row py-1">
            <MudButton Variant="@GetButtonVariant()" Color="@GetButtonColor()" OnClick="RunGroup_D">@GetButtonCaption(4)</MudButton>
            <MudText Class="pa-2 mx-2" Typo="Typo.body2">@GetGroupCoverageDesc(MethodGroupType.D)</MudText>
        </MudPaper>
        <MudPaper Class="d-flex flex-row py-1">
            <MudText Class="px-0 py-1" Typo="Typo.body2" Color="@_resColor"><strong>Coverage: @_coverProc%</strong></MudText>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private Dictionary<MethodGroupType, double> _coverages = new Dictionary<MethodGroupType, double>
    {
        { MethodGroupType.A, 25 }, { MethodGroupType.B, 25 }, { MethodGroupType.C, 25 }, { MethodGroupType.D, 25 }
    };

    private HashSet<MethodGroupType> _coverGroups = new HashSet<MethodGroupType>();
    private double _coverProc { get; set; }
    private Color _resColor = Color.Default;

    /*******************************************************************/

    string GetGroupCoverageDesc(MethodGroupType group)
    {
        return GetGroupCoverage(group) + "%";
    }

    double GetGroupCoverage(MethodGroupType group)
    {
        return _coverages[group];
    }

    void RunGroup_A()
    {
        var c = new CoverageTarget();
        c.IfElse_FullSimple_1(false);
        CoverGroup(MethodGroupType.A);
    }

    void RunGroup_B()
    {
        var c = new CoverageTarget();
        c.IfElse_FullSimple_1(true);
        CoverGroup(MethodGroupType.B);
    }

    void RunGroup_C()
    {
        var c = new CoverageTarget();
        c.IfElse_FullSimple_2(false);
        CoverGroup(MethodGroupType.C);
    }

    void RunGroup_D()
    {
        var c = new CoverageTarget();
        c.IfElse_FullSimple_2(true);
        CoverGroup(MethodGroupType.D);
    }

    void CoverGroup(MethodGroupType id)
    {
        if (!_coverGroups.Contains(id))
        {
            _coverGroups.Add(id);
            _coverProc += GetGroupCoverage(id);
        }
        if (_coverProc == 100)
            _resColor = Color.Success;
    }

    #region Buttons
    private string GetButtonCaption(int order = 0)
    {
        return $"Fun {order}";
    }

    private Variant GetButtonVariant()
    {
        return Variant.Outlined;
    }

    private Color GetButtonColor()
    {
        return Color.Primary;
    }
    #endregion
}


